package wrapffmpeg;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : libavcodec/avcodec.h:1899</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class AVSubtitleRect extends Structure {
	/** < top left corner  of pict, undefined when pict is not set */
	public int x;
	/** < top left corner  of pict, undefined when pict is not set */
	public int y;
	/** < width            of pict, undefined when pict is not set */
	public int w;
	/** < height           of pict, undefined when pict is not set */
	public int h;
	/** < number of colors in pict, undefined when pict is not set */
	public int nb_colors;
	/**
	 * data+linesize for the bitmap of this subtitle.<br>
	 * can be set for text/ass as well once they where rendered<br>
	 * C type : AVPicture
	 */
	public AVPicture pict;
	/**
	 * @see AVSubtitleType<br>
	 * C type : AVSubtitleType
	 */
	public int type;
	/**
	 * < 0 terminated plain UTF-8 text<br>
	 * C type : char*
	 */
	public Pointer text;
	/**
	 * 0 terminated ASS/SSA compatible event line.<br>
	 * The presentation of this is unaffected by the other values in this<br>
	 * struct.<br>
	 * C type : char*
	 */
	public Pointer ass;
	public int flags;
	public AVSubtitleRect() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("x", "y", "w", "h", "nb_colors", "pict", "type", "text", "ass", "flags");
	}
	public static class ByReference extends AVSubtitleRect implements Structure.ByReference {
		
	};
	public static class ByValue extends AVSubtitleRect implements Structure.ByValue {
		
	};
}
