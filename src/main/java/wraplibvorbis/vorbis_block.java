package wraplibvorbis;
import com.sun.jna.NativeLong;
import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import com.sun.jna.ptr.PointerByReference;
import java.util.Arrays;
import java.util.List;
/**
 * <i>native declaration : /home/yonran/Downloads/libvorbis-1.3.3/include/vorbis/codec.h:65</i><br>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
public class vorbis_block extends Structure {
	/**
	 * necessary stream state for linking to the framing abstraction<br>
	 * this is a pointer into local storage<br>
	 * C type : float**
	 */
	public PointerByReference pcm;
	/** C type : oggpack_buffer */
	public oggpack_buffer opb;
	public NativeLong lW;
	public NativeLong W;
	public NativeLong nW;
	public int pcmend;
	public int mode;
	public int eofflag;
	/** C type : ogg_int64_t */
	public long granulepos;
	/** C type : ogg_int64_t */
	public long sequence;
	/**
	 * For read-only access of configuration<br>
	 * C type : vorbis_dsp_state*
	 */
	public wraplibvorbis.vorbis_dsp_state.ByReference vd;
	/**
	 * local storage to avoid remallocing; it's up to the mapping to<br>
	 * structure it<br>
	 * C type : void*
	 */
	public Pointer localstore;
	public NativeLong localtop;
	public NativeLong localalloc;
	public NativeLong totaluse;
	/** C type : alloc_chain* */
	public wraplibvorbis.alloc_chain.ByReference reap;
	/** bitmetrics for the frame */
	public NativeLong glue_bits;
	public NativeLong time_bits;
	public NativeLong floor_bits;
	public NativeLong res_bits;
	/** C type : void* */
	public Pointer internal;
	public vorbis_block() {
		super();
	}
	protected List<? > getFieldOrder() {
		return Arrays.asList("pcm", "opb", "lW", "W", "nW", "pcmend", "mode", "eofflag", "granulepos", "sequence", "vd", "localstore", "localtop", "localalloc", "totaluse", "reap", "glue_bits", "time_bits", "floor_bits", "res_bits", "internal");
	}
	public static class ByReference extends vorbis_block implements Structure.ByReference {
		
	};
	public static class ByValue extends vorbis_block implements Structure.ByValue {
		
	};
}
